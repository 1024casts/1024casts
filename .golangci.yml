linters-settings:
  govet:
    check-shadowing: true
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infofgithub.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnfgithub.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  golint:
    min-confidence: 0
  gocyclo:
    min-complexity: 15
  maligned:
    suggest-new: true
  dupl:
    threshold: 100
  goconst:
    min-len: 2
    min-occurrences: 2
  depguard:
    list-type: blacklist
    packages:
      - github.com/sirupsen/logrus
    packages-with-error-messages:
      github.com/sirupsen/logrus: "logging is allowed only by logutils.Log"
  misspell:
    locale: US
    ignore-words:
      - someword
  lll:
    line-length: 260
  goimports:
    local-prefixes: github.com/1024casts/1024casts
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - wrapperFunc
      - commentedOutCode
      - dupImport # https://github.com/go-critic/go-critic/issues/845
  funlen:
    lines: 100
    statements: 50
  gosec:

linters:
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - bodyclose
    - deadcode
    - depguard
    - dogsled
    #  - dupl
    - errcheck
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - golint
    - gosec
    - gosimple
    - govet
    - ineffassign
    - interfacer
    - lll
    - misspell
    - nakedret
    - scopelint
    - staticcheck
    - structcheck
    - stylecheck
    - typecheck
    - unconvert
    - errcheck
    - unparam
    - unused
    - varcheck
    - whitespace

  # don't enable:
  # - gochecknoglobals
  # - gocognit
  # - godox
  # - maligned
  # - prealloc

issues:
  exclude:
    - G108
  #  # Exclude some linters from running on tests files.
  #  - path: srv/account/proto
  ##  - linters:
  ##    - lll
  ##    source: "^//go:generate "
  #  exclude-use-default: false
  max-same-issues: 5

run:
  # default concurrency is a available CPU number
  concurrency: 4

  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 1m

  # exit code when at least one issue was found, default is 1
  issues-exit-code: 1

  # include test files or not, default is true
  tests: true

  skip-dirs:
    - docs/
  skip-files:
    - ".*\\.my\\.go$"

# golangci.com configuration
# https://github/golangci/wiki/Configuration
service:
  golangci-lint-version: 1.19.x # use the fixed version to not introduce new linters unexpectedly
  prepare:
    - echo "here I can run custom commands, but no preparation needed for this repo"